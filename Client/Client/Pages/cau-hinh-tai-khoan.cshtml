@page
@model Client.Pages.cau_hinh_tai_khoanModel
@{
}
<div class="container-fluid pt-4 px-4">
    <div class="row g-4">
        <div class="col-sm-12 col-xl-2 d-flex flex-column chose_setting">
            <button type="button" class="btn btn-sm btn-outline-primary btn-primary m-2 btn-acc" data-item = "0">ACCOUNT INFORMATION</button>
            <button type="button" class="btn btn-sm btn-outline-primary m-2  btn-acc" data-item = "1">CHANGE THE PASSWORD</button>
            <button type="button" class="btn btn-sm btn-outline-primary m-2  btn-acc" data-item = "2">SENDER INFORMATION SETTING</button>
        </div>
        <div class="col-sm-12 col-xl-10 setting-acc setting-acc-0 " >
            <div class="bg-light rounded h-100 p-4">
                <h6 class="mb-4">ACCOUNT INFORMATION</h6>
                <div id = "ACCOUNT_INFORMATION">
                </div>
                <button type="button" class="btn btn-primary m-2 ACCOUNT_INFORMATION_submit">Save</button>
                <button type="button" class="btn btn-light m-2 cancer">Cancer </button>
            </div>
        </div>
        <div class="col-sm-12 col-xl-10 setting-acc setting-acc-1 d-none" >
            <div class="bg-light rounded h-100 p-4">
                <h6 class="mb-4">CHANGE THE PASSWORD</h6>
                <form>      
                    <div class="mb-3">
                        <label for="InputPassold" class="form-label">Password</label>
                        <input type="password" class="form-control" id="InputPassold">
                    </div>
                    <div class="mb-3">
                        <label for="InputPassnew" class="form-label">A new password</label>
                        <input type="password" class="form-control" id="InputPassnew" required>
                    </div>
                    <div class="mb-3">
                        <label for="InputPassnewcon" class="form-label">Enter the password</label>
                        <input type="password" class="form-control" id="InputPassnewcon" required>
                    </div>
                                
                    <button type="button" class="btn btn-primary m-2 CHANGE_THE_PASSWORD_submit">Save</button>
                    <button type="button" class="btn btn-light m-2 cancer">Cancer </button>
                </form>
            </div>
        </div>
        <div class="col-sm-12 col-xl-10 setting-acc setting-acc-2 d-none" >
            <div class="bg-light rounded h-100 p-4">
                <h6 class="mb-4">SENDER INFORMATION SETTING</h6>
                <button type="button" class="btn btn-outline-danger m-2" onclick = "show('#ModalAddSender')">Add Sender</button>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Name</th>
                            <th scope="col">Phone</th>
                            <th scope="col">Address</th>
                            <th scope="col"></th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody id = "SENDER_INFORMATION_SETTING">
                    </tbody>
                </table>         
            </div>
        </div>
        <div class="col-sm-12 col-xl-10 setting-acc setting-acc-3 d-none" >
            <div class="bg-light rounded h-100 p-4">
                <h6 class="mb-4">SERVICE SETTING</h6>
                <button type="button" class="btn btn-outline-danger m-2" onclick = "show('#ModalAddSerce')">Add Servce</button>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Name</th>
                            <th scope="col">Money</th>
                            <th scope="col">Time</th>
                            <th scope="col"></th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody id = "SERVICE_SETTING_SETTING">
                    </tbody>
                </table>         
            </div>
        </div>
        <div class="col-sm-12 col-xl-10 setting-acc setting-acc-4 d-none" >
            <div class="bg-light rounded h-100 p-4">
                <h6 class="mb-4">Transport Fee SETTING</h6>
                <button type="button" class="btn btn-outline-danger m-2" onclick = "show('#ModalAddTransportFee')">Add TransportFee</button>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Type</th>
                            <th scope="col">Money</th>
                            <th scope="col">Weith</th>
                            <th scope="col"></th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody id = "Transport_Fee_SETTING">
                    </tbody>
                </table>         
            </div>
        </div>
        <div class="col-sm-12 col-xl-10 setting-acc setting-acc-5 d-none" >
            <div class="bg-light rounded h-100 p-4">
                <h6 class="mb-4">SERVICE SETTING</h6>
                <button type="button" class="btn btn-outline-danger m-2" onclick = "show('#ModalAddaddresPostal')">Add Address Postal</button>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Name</th>
                            <th scope="col">Address</th>
                            <th scope="col">Link</th>
                            <th scope="col"></th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody id = "Address_Postal_SETTING">
                    </tbody>
                </table>         
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalEdit" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="btn btn-default" onclick = "hide('#ModalEdit')">&times;</button>
            <h4 class="modal-title">Edit</h4>
        </div>
        <div class="modal-body ModalEditbody">
        </div>
        <div class="modal-footer ModalEditfooter">
            <button type="button" class="btn btn-primary summitedit">Update</button>
            <button type="button" class="btn btn-default" onclick = "hide('#ModalEdit')">Close</button>
        </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ModalAddTransportFee" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="btn btn-default" onclick = "hide('#ModalAddTransportFee')">&times;</button>
            <h4 class="modal-title">Add Servce</h4>
        </div>
        <div class="modal-body">
            <div class="form-floating mb-3">
                <input type="text" class="form-control" id="AddTransportFeeType"  required>
                <label for="AddTransportFeeType">Type</label>
            </div>
            <div class="form-floating mb-4">
                <span class="input-group-text" style = "top: 0;position: absolute;right: 0;justify-content: center;width: calc(3.5rem + 2px);height: calc(3.5rem + 2px);">G</span>
                <input type="number" class="form-control" id="AddTransportFeeWeith"  required>
                <label for="AddTransportFeeWeith">Weith</label>
            </div>
            <div class="form-floating mb-4">
                <span class="input-group-text" style = "top: 0;position: absolute;right: 0;justify-content: center;width: calc(3.5rem + 2px);height: calc(3.5rem + 2px);">$</span>
                <input type="number" class="form-control" id="AddTransportFeeMoney" " required>
                <label for="AddTransportFeeMoney">Money</label>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-primary  btn-AddTransportFee ">Add</button>
            <button type="button" class="btn btn-default" onclick = "hide('#ModalAddTransportFee')">Close</button>
        </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ModalAddSerce" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn btn-default" onclick = "hide('#ModalAddSender')">&times;</button>
                <h4 class="modal-title">Add Servce</h4>
            </div>
            <div class="modal-body">
                <div class="form-floating mb-3">
                    <input type="text" class="form-control" id="AddServceText" placeholder="jhondoe" required>
                    <label for="AddServceText">Name Servce</label>
                </div>
                <div class="form-floating mb-4">
                    <input type="number" class="form-control" id="AddServcephone"  required>
         
                    <span class="input-group-text" style = "top: 0;position: absolute;right: 0;justify-content: center;width: calc(3.5rem + 2px);height: calc(3.5rem + 2px);">$</span>
                
                    <label for="AddServcephone">Money</label>
                </div>
                <div class="form-floating mb-4">
                    <span class="input-group-text" style = "top: 0;position: absolute;right: 0;justify-content: center;width: calc(3.5rem + 2px);height: calc(3.5rem + 2px);">day</span>
                    <input type="number" class="form-control" id="AddServceTime"  required>
                    <label for="AddServceTime">Time</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary  btn-AddServce ">Add</button>
                <button type="button" class="btn btn-default" onclick = "hide('#ModalAddSerce')">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ModalAddSender" role="dialog">
    <div class="modal-dialog">
         <div class="modal-content">
              <div class="modal-header">
                    <button type="button" class="btn btn-default" onclick = "hide('#ModalAddSender')">&times;</button>
                    <h4 class="modal-title">Add Sender</h4>
                </div>
                <div class="modal-body">
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="AddSenderText" placeholder="jhondoe" required>
                        <label for="AddSenderText">Username</label>
                    </div>
                    <div class="form-floating mb-4">
                        <input type="number" class="form-control" id="AddSenderphone" placeholder="phone" required>
                        <label for="AddSenderphone">Phone</label>
                    </div>
  
                    <div class="form-floating mb-4">
                        <input type="number" class="form-control" id="AddSenderAddress"  required>
                        <label for="AddSenderAddress">Address</label>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary btn-AddSender">Add</button>
                    <button type="button" class="btn btn-default" onclick = "hide('#ModalAddSender')">Close</button>
                </div>
         </div>
    </div>
</div>
<div class="modal fade" id="ModalAddaddresPostal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn btn-default" onclick = "hide('#ModalAddaddresPostal')">&times;</button>
                <h4 class="modal-title">Add Postal address </h4>
            </div>
            <div class="modal-body">
                <div class="form-floating mb-3">
                    <input type="text" class="form-control" id="AddaddresPostalName"  required>
                    <label for="AddaddresPostalName">Name</label>
                </div>
                <div class="form-floating mb-4">
                    <input type="text" class="form-control" id="AddaddresPostalAddress"  required>
                    <label for="AddaddresPostalAddress">Addres</label>
                </div>
  
                <div class="form-floating mb-4">
                    <input type="text" class="form-control" id="AddaddresPostalLink"  required>
                    <label for="AddaddresPostalLink">Link</label>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary btn-AddaddresPostal">Add</button>
                <button type="button" class="btn btn-default" onclick = "hide('#ModalAddaddresPostal')">Close</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        
        var cauhinhtaikhoan = async () => {
            if(!app.login) return;
            var btn_acc_s = document.querySelectorAll(".btn-acc");
            var setting_acc_s = document.querySelectorAll(".setting-acc");
            var ACCOUNT_INFORMATION_id = document.getElementById('ACCOUNT_INFORMATION');
            
            var data = app.dataUser;
            //render
            ACCOUNT_INFORMATION_id.innerHTML = `
                <div class="mb-3">
                    <label for="InputNamecusstomer1" class="form-label">Avatar</label>
                    <img src = "${UrlApi + UrlImagerName + app.dataUser.avatar}" style = "width: 100px;height: 100px;object-fit: cover;" id = "show_avt_profile">
                    <input type="file" class = "form-control" id = "inputImg" accept=".jpg, .jpeg, .png"  onchange = "changImg('#show_avt_profile','#inputImg',0)">
                </div>
                
                <div class="mb-3">
                    <label for="InputNamecusstomer1" class="form-label">Name of customer, company</label>
                    <input type="text" class="form-control" id="InputNamecusstomer1"
                        value = "${data.name}" >
                
                </div>
                <div class="mb-3">
                    <label for="InputEmail1" class="form-label">Email</label>
                    <input type="gmail" class="form-control" id="InputEmail1" value = "${data.email}" disabled>
                </div>
                <div class="mb-3">
                    <label for="InputPhone1" class="form-label">Phone number</label>
                    <input type="text" class="form-control" id="InputPhone1" value = "0${data.phone}" >
                </div>
                <div class="mb-3">
                    <label for="InputAddress1" class="form-label">Address</label>
                    <input type="text" class="form-control" id="InputAddress1" value = "${data.address}" >
                </div>
               
            `
            document.getElementById('SENDER_INFORMATION_SETTING').innerHTML = "";
            load.on();
            var data = await fetchurl.get(UrlApi + "/Recipients/" + getCookie("UserID"));
            var dataalluser = await fetchurl.get(UrlApi + UrlUser + "/" + getCookie("UserID") + "?all=true")
            

            var body = "";
            for(var i = 0; i < data.length ; i++){
                body += `<tr>
                            <th scope="row">${(i+1)}</th>
                            <td>${data[i].Name}</td>
                            <td>0${data[i].Phone}</td>
                            <td>${data[i].Address}</td>
                            <td><button type="button" class="btn btn-primary m-2" onclick = "editsenderinfo(${data[i].Id},'Recipients')">Edit</button></td>
                            <td><button type="button" class="btn btn-danger m-2" onclick = "deletesenderinfo(${data[i].Id},'Recipients')">Delete</button></td>
                        </tr>`
            }
            document.getElementById('SENDER_INFORMATION_SETTING').innerHTML = body;
            if(dataalluser.IsAdmin) {
                $(".chose_setting").append(` <button type="button" class="btn btn-sm btn-outline-primary m-2  btn-acc" data-item = "3">Service settings</button>
                                            <button type="button" class="btn btn-sm btn-outline-primary m-2  btn-acc" data-item = "4">Transport Fee settings</button>
                                            <button type="button" class="btn btn-sm btn-outline-primary m-2  btn-acc" data-item = "5">Postal address</button>`)
                
                var dataallservce = await fetchurl.get(UrlApi + "/Servces")
                var body = "";
                for(var i = 0; i < dataallservce.length ; i++){
                    body += `<tr>
                                <th scope="row">${(i+1)}</th>
                                <td>${dataallservce[i].Name}</td>
                                <td>${dataallservce[i].Money}</td>
                                <td>${dataallservce[i].Time}</td>
                                <td><button type="button" class="btn btn-primary m-2" onclick = "editsenderinfo(${dataallservce[i].Id},'Servces')">Edit</button></td>
                                <td><button type="button" class="btn btn-danger m-2" onclick = "deletesenderinfo(${dataallservce[i].Id},'Servces')">Delete</button></td>
                            </tr>`
                }
                document.getElementById('SERVICE_SETTING_SETTING').innerHTML = body;
                var TransportFees = await fetchurl.get(UrlApi + "/TransportFees")
                var body = "";
                for(var i = 0; i < TransportFees.length ; i++){
                    body += `<tr>
                                <th scope="row">${(i+1)}</th>
                                <td>${TransportFees[i].Type}</td>
                                <td>${TransportFees[i].Money}</td>
                                <td>${TransportFees[i].Weith}</td>
                                <td><button type="button" class="btn btn-primary m-2" onclick = "editsenderinfo(${TransportFees[i].Id},'TransportFees')">Edit</button></td>
                                <td><button type="button" class="btn btn-danger m-2" onclick = "deletesenderinfo(${TransportFees[i].Id},'TransportFees')">Delete</button></td>
                            </tr>`
                }
                document.getElementById('Transport_Fee_SETTING').innerHTML = body;
                var addresspostal = await fetchurl.get(UrlApi + "/postaddresses")
                var body = "";
                for(var i = 0; i < addresspostal.length ; i++){
                    body += `<tr>
                                <th scope="row">${(i+1)}</th>
                                <td>${addresspostal[i].Name}</td>
                                <td>${addresspostal[i].Address}</td>
                                <td style = "word-break: break-word;">${addresspostal[i].Link}</td>
                                <td><button type="button" class="btn btn-primary m-2" onclick = "editsenderinfo(${addresspostal[i].Id},'postaddresses')">Edit</button></td>
                                <td><button type="button" class="btn btn-danger m-2" onclick = "deletesenderinfo(${addresspostal[i].Id},'postaddresses')">Delete</button></td>
                            </tr>`
                }
                document.getElementById('Address_Postal_SETTING').innerHTML = body;

            }
            load.off();

            
            //endrender


            //post
            //post thông tin
            document.querySelector('.ACCOUNT_INFORMATION_submit').onclick = async () => {
                var avatar = document.querySelector('#inputImg').files[0];
                var avatarname = app.dataUser.avatar;
                if(avatar != undefined){
                    avatarname = `${app.dataUser.id}_avt.jpg`;
                    const formdata = new FormData();
                    formdata.append('file',avatar, avatarname);
                    await fetchurl.post(UrlApi + '/Imager',formdata,{},(err,data)=> {
                        if(err != null) {
                            console.log(JSON.stringify(err));
                            return alert("Vui lòng thửu lại sau")
                        }
                    })
                }
                var dataalluser = await fetchurl.get(UrlApi + UrlUser + "/" + getCookie("UserID") + "?all=true")
                await fetchurl.put(UrlApi + UrlUser + `/${app.dataUser.id}` , {
                    "id": app.dataUser.id,
                    "name": $("#InputNamecusstomer1").val(),
                    "password": dataalluser.Password,
                    "avatar": avatarname,
                    "isAdmin": dataalluser.IsAdmin,
                    "token": dataalluser.Token,
                    "phone": $("#InputPhone1").val(),
                    "email": $("#InputEmail1").val(),
                    "address": $("#InputAddress1").val(),
                    "orders": dataalluser.Orders
                },(err,d) => {
                    if(err) { 
                        JSON.stringify(err)
                        return alert("Vui lòng thử lại sau")
                    }
                } )
                return location.reload();
            }
            //end post thông tin
            //post đổi mk
            document.querySelector('.CHANGE_THE_PASSWORD_submit').onclick = async () => {
                var confirmationRePassword = $("#InputPassold").val();
                var InputPassnew = $("#InputPassnew").val();
                var InputPassnewcon = $("#InputPassnewcon").val();

                var pwdmd5 = md5(md5(confirmationRePassword));
                var token = md5(app.dataUser.email + pwdmd5);
                
                if(token != getCookie("Token")) return alert("Vui lòng nhập lại mật khẩu");
                if(InputPassnew != InputPassnewcon) return alert("Mật khẩu không trùng khớp");
              
                var pwdmd5new = md5(md5(InputPassnew));
                if(pwdmd5new == pwdmd5) return alert("Mật khẩu không được giống mật khẩu cũ");
                var dataalluser = await fetchurl.get(UrlApi + UrlUser + "/" + getCookie("UserID") + "?all=true")
                var tokennew = md5(app.dataUser.email + pwdmd5new);
                await fetchurl.put(UrlApi + UrlUser + `/${app.dataUser.id}` , {
                    "id": app.dataUser.id,
                    "name": dataalluser.Name,
                    "password": pwdmd5new,
                    "avatar": dataalluser.Avatar,
                    "isAdmin": dataalluser.IsAdmin,
                    "token": tokennew,
                    "phone": dataalluser.Phone,
                    "email": dataalluser.Email,
                    "address": dataalluser.Address,
                    "orders": dataalluser.Orders
                },(err,d) => {
                    if(err) { 
                        JSON.stringify(err)
                        return alert("Vui lòng thử lại sau")
                    }
                } )
                return location.reload();

            }
            //end đổi mk

            //handerevent
            var btn_acc_s = document.querySelectorAll(".btn-acc");
            for(var i = 0 ; i < btn_acc_s.length ; i++){
                btn_acc_s[i].onclick = function check(){
                    btn_acc_s.forEach( a => {
                        a.classList.remove('btn-primary');
                    })
                    setting_acc_s.forEach( b => b.classList.add('d-none') );
                    document.querySelector(`.setting-acc-${this.dataset.item}`).classList.remove('d-none');
                    this.classList.add('btn-primary')
                }
            }
            document.querySelector('.btn-AddaddresPostal').onclick = async () => {
                return fetchurl.post(UrlApi + "/postaddresses", {
                    "name": $("#AddaddresPostalName").val(),
                    "address": $("#AddaddresPostalAddress").val(),
                    "link": $("#AddaddresPostalLink").val()

                }, false, (loi, data) => {
                    if (loi) {
                        alert("Trang web đang bảo trì !! Mong bạn vào lại vào hôm sau :3");
                        return location.reload();
                    }

                    if (data.Status == "Error" || data.errors) {
                        alert(data.message ? data.message : data.errors);
                        console.log(data)
                        return location.reload()
                    }
                    alert("done")
                    return location.reload();
                })
            };


            document.querySelector('.btn-AddTransportFee').onclick = async () => {
                return fetchurl.post(UrlApi + "/TransportFees", {
                    "weith": $("#AddTransportFeeWeith").val(),
                    "distance": " ",
                    "type": $("#AddTransportFeeType").val(),
                    "money": $("#AddTransportFeeMoney").val()

                }, false, (loi, data) => {
                    if (loi) {
                        alert("Trang web đang bảo trì !! Mong bạn vào lại vào hôm sau :3");
                        return location.reload();
                    }

                    if (data.Status == "Error" || data.errors) {
                        alert(data.message ? data.message : data.errors);
                        console.log(data)
                        return location.reload()
                    }
                    alert("done")
                    return location.reload();
                })
            };
            
            document.querySelector('.btn-AddSender').onclick = async () => {
                return fetchurl.post(UrlApi + "/Recipients", {
                    "name": $("#AddSenderText").val(),
                    "userID": app.dataUser.id,
                    "phone": $("#AddSenderphone").val(),
                    "address": $("#AddSenderAddress").val(),
                }, false, (loi, data) => {
                    if (loi) {
                        alert("Trang web đang bảo trì !! Mong bạn vào lại vào hôm sau :3");
                        return location.reload();
                    }

                    if (data.Status == "Error" || data.errors) {
                        alert(data.message ? data.message : data.errors);
                        console.log(data)
                        return location.reload()
                    }
                    alert("done")
                    return location.reload();
                })
            };

            document.querySelector('.btn-AddServce').onclick = async () => {
                return fetchurl.post(UrlApi + "/Servces", {
                    "name": $("#AddServceText").val(),
                    "money": $("#AddServcephone").val(),
                    "time": $("#AddServceTime").val()
                }, false, (loi, data) => {
                    if (loi) {
                        alert("Trang web đang bảo trì !! Mong bạn vào lại vào hôm sau :3");
                        return location.reload();
                    }

                    if (data.Status == "Error" || data.errors) {
                        alert(data.message ? data.message : data.errors);
                        console.log(data)
                        return location.reload()
                    }
                    alert("done")
                    return location.reload();
                })
            };
            document.querySelector('.cancer').onclick = () => location.reload();
        }

        app.handercommands.push(cauhinhtaikhoan);
        async function editsenderinfo(id,name){
            if(name == 'Recipients'){
                var data = await fetchurl.get(UrlApi + "/Recipients/" + id + "?singer=true");
                document.querySelector('.ModalEditbody').innerHTML = `
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="EditSenderText" placeholder="jhondoe" required value = '${data.Name}'>
                        <label for="EditSenderText">Username</label>
                    </div>
                    <div class="form-floating mb-4">
                        <input type="number" class="form-control" id="EditSenderphone" placeholder="phone" required value = '0${data.Phone}'>
                        <label for="EditSenderphone">Phone</label>
                    </div>
                    <div class="form-floating mb-4">
                        <input type="text" class="form-control" id="EditSenderAddress" placeholder="Address" required value = '${data.Address}'>
                        <label for="EditSenderAddress">Address</label>
                    </div>
                `
                document.querySelector('.summitedit').classList.add('btn-Update');
                document.querySelector('.summitedit').classList.remove('btn-Update-servce');
                document.querySelector('.summitedit').classList.remove('btn-Update-tranpostfee');
                document.querySelector('.summitedit').classList.remove('btn-Update-postaddresses');

                document.querySelector('.btn-Update').onclick = async () => {
                return fetchurl.put(UrlApi + "/Recipients/" +  document.querySelector("#ModalEdit").dataset.id , {
                    "id": document.querySelector("#ModalEdit").dataset.id,
                    "name": $("#EditSenderText").val(),
                    "userID": app.dataUser.id,
                    "phone": $("#EditSenderphone").val(),
                    "address": $("#EditSenderAddress").val(),
                }, (loi, data) => {
                    if (loi) {
                        alert("Trang web đang bảo trì !! Mong bạn vào lại vào hôm sau :3");
                        return location.reload();
                    }

                    if (data.Status == "Error" || data.errors) {
                        alert(data.message ? data.message : data.errors);
                        console.log(data)
                        return location.reload()
                    }
                    alert("done")
                    return location.reload();
                })
            };

            }else if(name == 'Servces'){
                var data = await fetchurl.get(UrlApi + "/Servces/" + id);
                document.querySelector('.ModalEditbody').innerHTML = `
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="EditServceText" placeholder="jhondoe" required value = '${data.Name}'>
                        <label for="EditServceText">Name Servce</label>
                    </div>
                    <div class="form-floating mb-4">
                    <span class="input-group-text" style = "top: 0;position: absolute;right: 0;justify-content: center;width: calc(3.5rem + 2px);height: calc(3.5rem + 2px);">$</span>
                        <input type="number" class="form-control" id="EditServcephone" placeholder="phone" required value = '${data.Money}'>
                        <label for="EditServcephone">Money</label>
                    </div>
                    <div class="form-floating mb-4">
                    <span class="input-group-text" style = "top: 0;position: absolute;right: 0;justify-content: center;width: calc(3.5rem + 2px);height: calc(3.5rem + 2px);">day</span>
                        <input type="number" class="form-control" id="EditServceTime" placeholder="phone" required value = '${data.Time}'>
                        <label for="EditServceTime">Time</label>
                    </div>
                `

                document.querySelector('.summitedit').classList.remove('btn-Update');
                document.querySelector('.summitedit').classList.add('btn-Update-servce');
                document.querySelector('.summitedit').classList.remove('btn-Update-tranpostfee');
                document.querySelector('.summitedit').classList.remove('btn-Update-postaddresses');

                document.querySelector('.btn-Update-servce').onclick = async () => {
                    return fetchurl.put(UrlApi + "/Servces/" +  document.querySelector("#ModalEdit").dataset.id , {
                        "id": document.querySelector("#ModalEdit").dataset.id,
                        "name": $("#EditServceText").val(),
                        "Money": $("#EditServcephone").val(),
                        "time": $("#EditServceTime").val()
                    }, (loi, data) => {
                        if (loi) {
                            alert("Trang web đang bảo trì !! Mong bạn vào lại vào hôm sau :3");
                            return location.reload();
                        }

                        if (data.Status == "Error" || data.errors) {
                            alert(data.message ? data.message : data.errors);
                            console.log(data)
                            return location.reload()
                        }
                        alert("done")
                        return location.reload();
                    })
                };

            }else if(name == 'TransportFees'){
                var data = await fetchurl.get(UrlApi + "/TransportFees/" + id);
                document.querySelector('.ModalEditbody').innerHTML = `
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="EditTransportFeesText" placeholder="jhondoe" required value = '${data.Type}'>
                        <label for="EditTransportFeesText">Type</label>
                    </div>
                    <div class="form-floating mb-3">
                    <span class="input-group-text" style = "top: 0;position: absolute;right: 0;justify-content: center;width: calc(3.5rem + 2px);height: calc(3.5rem + 2px);">G</span>
                        <input type="text" class="form-control" id="EditTransportFeesWeith" placeholder="jhondoe" required value = '${data.Weith}'>
                        <label for="EditTransportFeesWeith">Weith</label>
                    </div>
                    <div class="form-floating mb-3">
                    <span class="input-group-text" style = "top: 0;position: absolute;right: 0;justify-content: center;width: calc(3.5rem + 2px);height: calc(3.5rem + 2px);">$</span>
                        <input type="text" class="form-control" id="EditTransportFeesMoney" placeholder="jhondoe" required value = '${data.Money}'>
                        <label for="EditTransportFeesMoney">Money</label>
                    </div>
                `
                document.querySelector('.summitedit').classList.remove('btn-Update');
                document.querySelector('.summitedit').classList.remove('btn-Update-servce');
                document.querySelector('.summitedit').classList.add('btn-Update-tranpostfee');
                document.querySelector('.summitedit').classList.remove('btn-Update-postaddresses');

                document.querySelector('.btn-Update-tranpostfee').onclick = async () => {
                return fetchurl.put(UrlApi + "/TransportFees/" +  document.querySelector("#ModalEdit").dataset.id , {
                        "id": document.querySelector("#ModalEdit").dataset.id,
                        "weith": $("#EditTransportFeesWeith").val(),
                        "distance": " ",
                        "type": $("#EditTransportFeesText").val(),
                        "money": $("#EditTransportFeesMoney").val()
                    }, (loi, data) => {
                        if (loi) {
                            alert("Trang web đang bảo trì !! Mong bạn vào lại vào hôm sau :3");
                            return location.reload();
                        }

                        if (data.Status == "Error" || data.errors) {
                            alert(data.message ? data.message : data.errors);
                            console.log(data)
                            return location.reload()
                        }
                        alert("done")
                        return location.reload();
                    })
                };
            }else if(name == "postaddresses"){
                var data = await fetchurl.get(UrlApi + "/postaddresses/" + id);
                document.querySelector('.ModalEditbody').innerHTML = `
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="EditpostaddressesText" required value = '${data.Name}'>
                        <label for="EditpostaddressesText">Name</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="EditpostaddressesAddress"  required value = '${data.Address}'>
                        <label for="EditpostaddressesAddress">Address</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="EditpostaddressesLink"  required value = '${data.Link}'>
                        <label for="EditpostaddressesLink">Link</label>
                    </div>
                `
                document.querySelector('.summitedit').classList.remove('btn-Update');
                document.querySelector('.summitedit').classList.remove('btn-Update-servce');
                document.querySelector('.summitedit').classList.remove('btn-Update-tranpostfee');
                document.querySelector('.summitedit').classList.add('btn-Update-postaddresses');

                document.querySelector('.btn-Update-postaddresses').onclick = async () => {
                return fetchurl.put(UrlApi + "/postaddresses/" +  document.querySelector("#ModalEdit").dataset.id , {
                        "id": document.querySelector("#ModalEdit").dataset.id,
                        "name": $("#EditpostaddressesText").val(),
                        "address": $("#EditpostaddressesAddress").val(),
                        "link": $("#EditpostaddressesLink").val()
                    }, (loi, data) => {
                        if (loi) {
                            alert("Trang web đang bảo trì !! Mong bạn vào lại vào hôm sau :3");
                            return location.reload();
                        }

                        if (data.Status == "Error" || data.errors) {
                            alert(data.message ? data.message : data.errors);
                            console.log(data)
                            return location.reload()
                        }
                        alert("done")
                        return location.reload();
                    })
                };
            }
            show("#ModalEdit");
            return document.querySelector("#ModalEdit").dataset.id = id;
        }
        function deletesenderinfo(id,name){
            if(confirm("Are you sure ??") == true){
                return fetchurl.delete(UrlApi + "/"+name+"/" +  id, (loi, data) => {
                    if (loi) {
                        alert("Trang web đang bảo trì !! Mong bạn vào lại vào hôm sau :3");
                        return location.reload();
                    }

                    if (data.Status == "Error" || data.errors) {
                        alert(data.message ? data.message : data.errors);
                        console.log(data)
                        return location.reload()
                    }
                    alert("done")
                    return location.reload();
                })
            }
        }

    </script>

}
